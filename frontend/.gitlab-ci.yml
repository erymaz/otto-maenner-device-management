stages:
  - build
  - push

build device-management:
  stage: build
  image: docker:stable
  script:
    - apk add jq sed
    - APP_NAME=`cat ./package.json | jq -r .name`
    - APP_VERSION=`echo $CI_COMMIT_TAG | sed 's/^v//'`
    - docker build -f Dockerfile --build-arg BUILD_ENVIRONMENT=production -t ${APP_NAME}:${CI_COMMIT_SHA} .
    - docker save ${APP_NAME}:${CI_COMMIT_SHA} | gzip -1 > ${ARTIFACTS_BASE_PATH:-./}image.tar.gz
  artifacts:
    expire_in: 1 hrs
    paths:
      - ${ARTIFACTS_BASE_PATH:-./}image.tar.gz

push device-management:
  stage: push
  image: docker:stable
  only:
    - master
  script:
    - apk add jq sed
    - APP_NAME=`cat ./package.json | jq -r .name`
    - ls -al $ARTIFACTS_BASE_PATH
    - gunzip -c ${ARTIFACTS_BASE_PATH:-./}image.tar.gz | docker load
    - if [ "$CI_COMMIT_BRANCH" = "master" ]; then DOCKER_IMAGE_NAME_POSTFIX=""; else DOCKER_IMAGE_NAME_POSTFIX="-$CI_COMMIT_BRANCH"; fi
    - docker login -u $DOCKER_USERNAME_ELUNIC -p $DOCKER_PASSWORD_ELUNIC $DOCKER_REGISTRY_ELUNIC
    - docker tag ${APP_NAME}:${CI_COMMIT_SHA} $DOCKER_REGISTRY_ELUNIC/$APP_NAME$DOCKER_IMAGE_NAME_POSTFIX:latest
    - docker push $DOCKER_REGISTRY_ELUNIC/$APP_NAME$DOCKER_IMAGE_NAME_POSTFIX:latest
